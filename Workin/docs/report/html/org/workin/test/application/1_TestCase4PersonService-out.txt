[org.springframework.beans.factory.xml.XmlBeanDefinitionReader] - <Loading XML bean definitions from class path resource [applicationContext.xml]>
[org.springframework.beans.factory.xml.XmlBeanDefinitionReader] - <Loading XML bean definitions from class path resource [tx/applicationContext-tx.xml]>
[org.springframework.beans.factory.xml.XmlBeanDefinitionReader] - <Loading XML bean definitions from class path resource [rss/applicationContext-rss.xml]>
[org.springframework.beans.factory.xml.XmlBeanDefinitionReader] - <Loading XML bean definitions from class path resource [email/applicationContext-email.xml]>
[org.springframework.beans.factory.xml.XmlBeanDefinitionReader] - <Loading XML bean definitions from class path resource [apps/applicationContext-person.xml]>
[org.springframework.beans.factory.xml.XmlBeanDefinitionReader] - <Loading XML bean definitions from class path resource [log/applicationContext-log.xml]>
[org.springframework.context.support.GenericApplicationContext] - <Refreshing org.springframework.context.support.GenericApplicationContext@1f42b49: display name [org.springframework.context.support.GenericApplicationContext@1f42b49]; startup date [Mon Nov 16 12:35:57 CST 2009]; root of context hierarchy>
[org.springframework.context.support.GenericApplicationContext] - <Bean factory for application context [org.springframework.context.support.GenericApplicationContext@1f42b49]: org.springframework.beans.factory.support.DefaultListableBeanFactory@153f67e>
[org.springframework.beans.factory.config.PropertyPlaceholderConfigurer] - <Loading properties file from class path resource [applicationContext.properties]>
[org.springframework.beans.factory.config.PropertyPlaceholderConfigurer] - <Loading properties file from class path resource [email/email.properties]>
[org.springframework.beans.factory.config.PropertyPlaceholderConfigurer] - <Loading properties file from class path resource [rss/rss.properties]>
[org.springframework.context.support.GenericApplicationContext] - <Bean 'org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter#55e55f' is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)>
[org.springframework.context.support.GenericApplicationContext] - <Bean 'dataSource' is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)>
[org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] - <Building JPA container EntityManagerFactory for persistence unit 'Workin'>
[org.hibernate.cfg.annotations.Version] - <Hibernate Annotations 3.4.0.GA>
[org.hibernate.cfg.Environment] - <Hibernate 3.3.2.GA>
[org.hibernate.cfg.Environment] - <hibernate.properties not found>
[org.hibernate.cfg.Environment] - <Bytecode provider name : javassist>
[org.hibernate.cfg.Environment] - <using JDK 1.4 java.sql.Timestamp handling>
[org.hibernate.annotations.common.Version] - <Hibernate Commons Annotations 3.1.0.GA>
[org.hibernate.ejb.Version] - <Hibernate EntityManager 3.4.0.GA>
[org.hibernate.ejb.Ejb3Configuration] - <Processing PersistenceUnitInfo [
	name: Workin
	...]>
[org.hibernate.cfg.AnnotationBinder] - <Binding entity from annotated class: org.workin.test.application.entity.Address>
[org.hibernate.cfg.annotations.EntityBinder] - <Bind entity org.workin.test.application.entity.Address on table Address>
[org.hibernate.cfg.AnnotationBinder] - <Binding entity from annotated class: org.workin.test.application.entity.Person>
[org.hibernate.cfg.annotations.QueryBinder] - <Binding Named query: findAllPerson => SELECT p FROM Person p>
[org.hibernate.cfg.annotations.QueryBinder] - <Binding Named query: findPersonByName => SELECT p FROM Person p WHERE p.name = :name>
[org.hibernate.cfg.annotations.QueryBinder] - <Binding Named query: findPersonByNameExt => SELECT p FROM Person p WHERE p.name = ?>
[org.hibernate.cfg.annotations.EntityBinder] - <Bind entity org.workin.test.application.entity.Person on table person>
[org.hibernate.cfg.AnnotationConfiguration] - <Hibernate Validator not found: ignoring>
[org.hibernate.cfg.search.HibernateSearchEventListenerRegister] - <Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.>
[org.hibernate.connection.ConnectionProviderFactory] - <Initializing connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider>
[org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider] - <Using provided datasource>
[org.hibernate.cfg.SettingsFactory] - <RDBMS: MySQL, version: 6.0.7-alpha-community-log>
[org.hibernate.cfg.SettingsFactory] - <JDBC driver: MySQL-AB JDBC Driver, version: mysql-connector-java-5.1.6 ( Revision: ${svn.Revision} )>
[org.hibernate.dialect.Dialect] - <Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect>
[org.hibernate.transaction.TransactionFactoryFactory] - <Transaction strategy: org.hibernate.transaction.JDBCTransactionFactory>
[org.hibernate.transaction.TransactionManagerLookupFactory] - <No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)>
[org.hibernate.cfg.SettingsFactory] - <Automatic flush during beforeCompletion(): disabled>
[org.hibernate.cfg.SettingsFactory] - <Automatic session close at end of transaction: disabled>
[org.hibernate.cfg.SettingsFactory] - <JDBC batch size: 15>
[org.hibernate.cfg.SettingsFactory] - <JDBC batch updates for versioned data: disabled>
[org.hibernate.cfg.SettingsFactory] - <Scrollable result sets: enabled>
[org.hibernate.cfg.SettingsFactory] - <JDBC3 getGeneratedKeys(): enabled>
[org.hibernate.cfg.SettingsFactory] - <Connection release mode: auto>
[org.hibernate.cfg.SettingsFactory] - <Maximum outer join fetch depth: 2>
[org.hibernate.cfg.SettingsFactory] - <Default batch fetch size: 1>
[org.hibernate.cfg.SettingsFactory] - <Generate SQL with comments: disabled>
[org.hibernate.cfg.SettingsFactory] - <Order SQL updates by primary key: disabled>
[org.hibernate.cfg.SettingsFactory] - <Order SQL inserts for batching: disabled>
[org.hibernate.cfg.SettingsFactory] - <Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory>
[org.hibernate.hql.ast.ASTQueryTranslatorFactory] - <Using ASTQueryTranslatorFactory>
[org.hibernate.cfg.SettingsFactory] - <Query language substitutions: {}>
[org.hibernate.cfg.SettingsFactory] - <JPA-QL strict compliance: enabled>
[org.hibernate.cfg.SettingsFactory] - <Second-level cache: enabled>
[org.hibernate.cfg.SettingsFactory] - <Query cache: enabled>
[org.hibernate.cfg.SettingsFactory] - <Cache region factory : org.hibernate.cache.impl.bridge.RegionFactoryCacheProviderBridge>
[org.hibernate.cfg.SettingsFactory] - <Optimize cache for minimal puts: disabled>
[org.hibernate.cfg.SettingsFactory] - <Structured second-level cache entries: disabled>
[org.hibernate.cfg.SettingsFactory] - <Query cache factory: org.hibernate.cache.StandardQueryCacheFactory>
[org.hibernate.cfg.SettingsFactory] - <Echoing all SQL to stdout>
[org.hibernate.cfg.SettingsFactory] - <Statistics: enabled>
[org.hibernate.cfg.SettingsFactory] - <Deleted entity synthetic identifier rollback: disabled>
[org.hibernate.cfg.SettingsFactory] - <Default entity-mode: pojo>
[org.hibernate.cfg.SettingsFactory] - <Named query checking : enabled>
[org.hibernate.impl.SessionFactoryImpl] - <building session factory>
[org.hibernate.impl.SessionFactoryObjectFactory] - <Not binding factory to JNDI, no JNDI name configured>
[org.hibernate.tool.hbm2ddl.SchemaUpdate] - <Running hbm2ddl schema update>
[org.hibernate.tool.hbm2ddl.SchemaUpdate] - <fetching database metadata>
[org.hibernate.tool.hbm2ddl.SchemaUpdate] - <updating schema>
[org.hibernate.tool.hbm2ddl.TableMetadata] - <table found: workin.address>
[org.hibernate.tool.hbm2ddl.TableMetadata] - <columns: [work, id, home, phone, updatedttm, updateby, createby, createdttm, version]>
[org.hibernate.tool.hbm2ddl.TableMetadata] - <foreign keys: []>
[org.hibernate.tool.hbm2ddl.TableMetadata] - <indexes: [primary]>
[org.hibernate.tool.hbm2ddl.TableMetadata] - <table found: workin.person>
[org.hibernate.tool.hbm2ddl.TableMetadata] - <columns: [id, birthday, sex, updatedttm, updateby, createby, name, createdttm, version]>
[org.hibernate.tool.hbm2ddl.TableMetadata] - <foreign keys: []>
[org.hibernate.tool.hbm2ddl.TableMetadata] - <indexes: [primary]>
[org.hibernate.tool.hbm2ddl.TableMetadata] - <table found: workin.person_address>
[org.hibernate.tool.hbm2ddl.TableMetadata] - <columns: [person_id, address_id]>
[org.hibernate.tool.hbm2ddl.TableMetadata] - <foreign keys: [fk873150eafc95f519, fk873150eaa1a6ad9b]>
[org.hibernate.tool.hbm2ddl.TableMetadata] - <indexes: [fk873150eafc95f519, address_id, fk873150eaa1a6ad9b, primary]>
[org.hibernate.tool.hbm2ddl.SchemaUpdate] - <schema update complete>
[org.springframework.context.support.GenericApplicationContext] - <Bean 'entityManagerFactory' is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)>
[org.springframework.beans.factory.support.DefaultListableBeanFactory] - <Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@153f67e: defining beans [org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,txAdvice,txAdvicePointcut,org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0,templetOfFeed,rssBuilder,dateBean,mailSender,mailService,mimeMailService,freemarkerConfiguration,personService,logger,org.springframework.aop.aspectj.AspectJPointcutAdvisor#0,aspectLogger,org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,JulOverSlf4j,SpringContextHolder,auditEventProvider,auditEventExecutor,org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0,transactionManager,dataSource,entityManagerFactory,sqlMapClient,jpaPersistence,sqlMapPersistence,persistenceService]; root of factory hierarchy>
[org.workin.core.entity.support.AuditEventProvider] - < Audit Event Executor : $Proxy41>
[org.springframework.test.context.transaction.TransactionalTestExecutionListener] - <Began transaction (1): transaction manager [org.springframework.orm.jpa.JpaTransactionManager@1162a9c]; rollback [false]>
[org.workin.log.LoggerAspectProxy] - <org.workin.test.application.service.PersonServiceImpl.getAll()-->Start.>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.support.PersistenceServiceProvider.getAll()-->Start.>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.jpa.JpaPersistenceImpl.getAll()-->Start.>
Hibernate: select person0_.id as id1_, person0_.version as version1_, person0_.birthday as birthday1_, person0_.name as name1_, person0_.sex as sex1_ from person person0_
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.jpa.JpaPersistenceImpl.getAll()-->End. [Invocation Time : 47 ms.]>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.support.PersistenceServiceProvider.getAll()-->End. [Invocation Time : 47 ms.]>
[org.workin.log.LoggerAspectProxy] - <org.workin.test.application.service.PersonServiceImpl.getAll()-->End. [Invocation Time : 62 ms.]>
[org.springframework.test.context.transaction.TransactionalTestExecutionListener] - <Committed transaction after test execution for test context [[TestContext@1628b8d testClass = TestCase4PersonService, locations = array<String>['classpath:/applicationContext.xml'], testInstance = org.workin.test.application.TestCase4PersonService@b80f1c, testMethod = initDb@TestCase4PersonService, testException = [null]&#x5d;&#x5d;&gt;
[org.springframework.test.context.transaction.TransactionalTestExecutionListener] - <Began transaction (2): transaction manager [org.springframework.orm.jpa.JpaTransactionManager@1162a9c]; rollback [false]>
[org.workin.log.LoggerAspectProxy] - <org.workin.test.application.service.PersonServiceImpl.save()-->Start.>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.support.PersistenceServiceProvider.persist()-->Start.>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.jpa.JpaPersistenceImpl.persist()-->Start.>
Hibernate: insert into person (version, birthday, name, sex) values (?, ?, ?, ?)
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.jpa.JpaPersistenceImpl.persist()-->End. [Invocation Time : 47 ms.]>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.support.PersistenceServiceProvider.persist()-->End. [Invocation Time : 47 ms.]>
[org.workin.log.LoggerAspectProxy] - <org.workin.test.application.service.PersonServiceImpl.save()-->End. [Invocation Time : 47 ms.]>
[org.springframework.test.context.transaction.TransactionalTestExecutionListener] - <Committed transaction after test execution for test context [[TestContext@1628b8d testClass = TestCase4PersonService, locations = array<String>['classpath:/applicationContext.xml'], testInstance = org.workin.test.application.TestCase4PersonService@1c5809e, testMethod = addPerson@TestCase4PersonService, testException = [null]&#x5d;&#x5d;&gt;
[org.springframework.test.context.transaction.TransactionalTestExecutionListener] - <Began transaction (3): transaction manager [org.springframework.orm.jpa.JpaTransactionManager@1162a9c]; rollback [true]>
[org.workin.log.LoggerAspectProxy] - <org.workin.test.application.service.PersonServiceImpl.findById()-->Start.>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.support.PersistenceServiceProvider.findById()-->Start.>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.jpa.JpaPersistenceImpl.findById()-->Start.>
Hibernate: select person0_.id as id1_0_, person0_.version as version1_0_, person0_.birthday as birthday1_0_, person0_.name as name1_0_, person0_.sex as sex1_0_ from person person0_ where person0_.id=?
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.jpa.JpaPersistenceImpl.findById()-->End. [Invocation Time : 15 ms.]>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.support.PersistenceServiceProvider.findById()-->End. [Invocation Time : 15 ms.]>
[org.workin.log.LoggerAspectProxy] - <org.workin.test.application.service.PersonServiceImpl.findById()-->End. [Invocation Time : 31 ms.]>
[org.springframework.test.context.transaction.TransactionalTestExecutionListener] - <Rolled back transaction after test execution for test context [[TestContext@1628b8d testClass = TestCase4PersonService, locations = array<String>['classpath:/applicationContext.xml'], testInstance = org.workin.test.application.TestCase4PersonService@b6f7f5, testMethod = findPersonById@TestCase4PersonService, testException = [null]&#x5d;&#x5d;&gt;
[org.springframework.test.context.junit4.SpringMethodRoadie] - <Repetition 1 of test getAllPerson>
[org.springframework.test.context.transaction.TransactionalTestExecutionListener] - <Began transaction (4): transaction manager [org.springframework.orm.jpa.JpaTransactionManager@1162a9c]; rollback [true]>
[org.workin.log.LoggerAspectProxy] - <org.workin.test.application.service.PersonServiceImpl.getAll()-->Start.>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.support.PersistenceServiceProvider.getAll()-->Start.>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.jpa.JpaPersistenceImpl.getAll()-->Start.>
Hibernate: select person0_.id as id1_, person0_.version as version1_, person0_.birthday as birthday1_, person0_.name as name1_, person0_.sex as sex1_ from person person0_
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.jpa.JpaPersistenceImpl.getAll()-->End. [Invocation Time : 0 ms.]>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.support.PersistenceServiceProvider.getAll()-->End. [Invocation Time : 0 ms.]>
[org.workin.log.LoggerAspectProxy] - <org.workin.test.application.service.PersonServiceImpl.getAll()-->End. [Invocation Time : 0 ms.]>
[org.springframework.test.context.transaction.TransactionalTestExecutionListener] - <Rolled back transaction after test execution for test context [[TestContext@1628b8d testClass = TestCase4PersonService, locations = array<String>['classpath:/applicationContext.xml'], testInstance = org.workin.test.application.TestCase4PersonService@bb6255, testMethod = getAllPerson@TestCase4PersonService, testException = [null]&#x5d;&#x5d;&gt;
[org.springframework.test.context.junit4.SpringMethodRoadie] - <Repetition 2 of test getAllPerson>
[org.springframework.test.context.transaction.TransactionalTestExecutionListener] - <Began transaction (5): transaction manager [org.springframework.orm.jpa.JpaTransactionManager@1162a9c]; rollback [true]>
[org.workin.log.LoggerAspectProxy] - <org.workin.test.application.service.PersonServiceImpl.getAll()-->Start.>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.support.PersistenceServiceProvider.getAll()-->Start.>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.jpa.JpaPersistenceImpl.getAll()-->Start.>
Hibernate: select person0_.id as id1_, person0_.version as version1_, person0_.birthday as birthday1_, person0_.name as name1_, person0_.sex as sex1_ from person person0_
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.jpa.JpaPersistenceImpl.getAll()-->End. [Invocation Time : 0 ms.]>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.support.PersistenceServiceProvider.getAll()-->End. [Invocation Time : 0 ms.]>
[org.workin.log.LoggerAspectProxy] - <org.workin.test.application.service.PersonServiceImpl.getAll()-->End. [Invocation Time : 0 ms.]>
[org.springframework.test.context.transaction.TransactionalTestExecutionListener] - <Rolled back transaction after test execution for test context [[TestContext@1628b8d testClass = TestCase4PersonService, locations = array<String>['classpath:/applicationContext.xml'], testInstance = org.workin.test.application.TestCase4PersonService@bb6255, testMethod = getAllPerson@TestCase4PersonService, testException = [null]&#x5d;&#x5d;&gt;
[org.springframework.test.context.transaction.TransactionalTestExecutionListener] - <Began transaction (6): transaction manager [org.springframework.orm.jpa.JpaTransactionManager@1162a9c]; rollback [true]>
[org.workin.log.LoggerAspectProxy] - <org.workin.test.application.service.PersonServiceImpl.findPersonsBySqlMap()-->Start.>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.support.PersistenceServiceProvider.findListBySqlMap()-->Start.>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.ibatis.SqlMapPersistenceImpl.findListBySqlMap()-->Start.>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.ibatis.SqlMapPersistenceImpl.findListBySqlMap()-->End. [Invocation Time : 15 ms.]>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.support.PersistenceServiceProvider.findListBySqlMap()-->End. [Invocation Time : 15 ms.]>
[org.workin.log.LoggerAspectProxy] - <org.workin.test.application.service.PersonServiceImpl.findPersonsBySqlMap()-->End. [Invocation Time : 15 ms.]>
[org.springframework.test.context.transaction.TransactionalTestExecutionListener] - <Rolled back transaction after test execution for test context [[TestContext@1628b8d testClass = TestCase4PersonService, locations = array<String>['classpath:/applicationContext.xml'], testInstance = org.workin.test.application.TestCase4PersonService@3bce70, testMethod = findPersonsBySqlMap@TestCase4PersonService, testException = [null]&#x5d;&#x5d;&gt;
[org.springframework.test.context.transaction.TransactionalTestExecutionListener] - <Began transaction (7): transaction manager [org.springframework.orm.jpa.JpaTransactionManager@1162a9c]; rollback [true]>
[org.workin.log.LoggerAspectProxy] - <org.workin.test.application.service.PersonServiceImpl.findPersonsByNamedQuery()-->Start.>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.support.PersistenceServiceProvider.findByNamedOfQuery()-->Start.>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.jpa.JpaPersistenceImpl.findByNamedOfQuery()-->Start.>
Hibernate: select person0_.id as id1_, person0_.version as version1_, person0_.birthday as birthday1_, person0_.name as name1_, person0_.sex as sex1_ from person person0_ where person0_.name=?
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.jpa.JpaPersistenceImpl.findByNamedOfQuery()-->End. [Invocation Time : 0 ms.]>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.support.PersistenceServiceProvider.findByNamedOfQuery()-->End. [Invocation Time : 0 ms.]>
[org.workin.log.LoggerAspectProxy] - <org.workin.test.application.service.PersonServiceImpl.findPersonsByNamedQuery()-->End. [Invocation Time : 0 ms.]>
[org.springframework.test.context.transaction.TransactionalTestExecutionListener] - <Rolled back transaction after test execution for test context [[TestContext@1628b8d testClass = TestCase4PersonService, locations = array<String>['classpath:/applicationContext.xml'], testInstance = org.workin.test.application.TestCase4PersonService@883644, testMethod = findPersonsByNamedQuery@TestCase4PersonService, testException = [null]&#x5d;&#x5d;&gt;
[org.springframework.test.context.transaction.TransactionalTestExecutionListener] - <Began transaction (8): transaction manager [org.springframework.orm.jpa.JpaTransactionManager@1162a9c]; rollback [true]>
[org.workin.log.LoggerAspectProxy] - <org.workin.test.application.service.PersonServiceImpl.findPersonsByProperty()-->Start.>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.support.PersistenceServiceProvider.findByProperty()-->Start.>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.jpa.JpaPersistenceImpl.findByProperty()-->Start.>
Hibernate: select person0_.id as id1_, person0_.version as version1_, person0_.birthday as birthday1_, person0_.name as name1_, person0_.sex as sex1_ from person person0_ where person0_.name=?
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.jpa.JpaPersistenceImpl.findByProperty()-->End. [Invocation Time : 0 ms.]>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.support.PersistenceServiceProvider.findByProperty()-->End. [Invocation Time : 0 ms.]>
[org.workin.log.LoggerAspectProxy] - <org.workin.test.application.service.PersonServiceImpl.findPersonsByProperty()-->End. [Invocation Time : 0 ms.]>
[org.springframework.test.context.transaction.TransactionalTestExecutionListener] - <Rolled back transaction after test execution for test context [[TestContext@1628b8d testClass = TestCase4PersonService, locations = array<String>['classpath:/applicationContext.xml'], testInstance = org.workin.test.application.TestCase4PersonService@a83c2a, testMethod = findPersonsByProperty@TestCase4PersonService, testException = [null]&#x5d;&#x5d;&gt;
[org.springframework.test.context.transaction.TransactionalTestExecutionListener] - <Began transaction (9): transaction manager [org.springframework.orm.jpa.JpaTransactionManager@1162a9c]; rollback [true]>
[org.workin.log.LoggerAspectProxy] - <org.workin.test.application.service.PersonServiceImpl.findPersonsByPropertys()-->Start.>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.support.PersistenceServiceProvider.findByPropertys()-->Start.>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.jpa.JpaPersistenceImpl.findByPropertys()-->Start.>
[org.workin.core.persistence.jpa.JpaPersistenceImpl] - < Build Query String With NamedParams: SELECT obj FROM org.workin.test.application.entity.Person obj where sex = :sex and name = :name>
Hibernate: select person0_.id as id1_, person0_.version as version1_, person0_.birthday as birthday1_, person0_.name as name1_, person0_.sex as sex1_ from person person0_ where person0_.sex=? and person0_.name=?
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.jpa.JpaPersistenceImpl.findByPropertys()-->End. [Invocation Time : 16 ms.]>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.support.PersistenceServiceProvider.findByPropertys()-->End. [Invocation Time : 16 ms.]>
[org.workin.log.LoggerAspectProxy] - <org.workin.test.application.service.PersonServiceImpl.findPersonsByPropertys()-->End. [Invocation Time : 16 ms.]>
[org.springframework.test.context.transaction.TransactionalTestExecutionListener] - <Rolled back transaction after test execution for test context [[TestContext@1628b8d testClass = TestCase4PersonService, locations = array<String>['classpath:/applicationContext.xml'], testInstance = org.workin.test.application.TestCase4PersonService@1435686, testMethod = findPersonsByPropertys@TestCase4PersonService, testException = [null]&#x5d;&#x5d;&gt;
[org.springframework.test.context.transaction.TransactionalTestExecutionListener] - <Began transaction (10): transaction manager [org.springframework.orm.jpa.JpaTransactionManager@1162a9c]; rollback [false]>
[org.workin.log.LoggerAspectProxy] - <org.workin.test.application.service.PersonServiceImpl.findById()-->Start.>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.support.PersistenceServiceProvider.findById()-->Start.>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.jpa.JpaPersistenceImpl.findById()-->Start.>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.jpa.JpaPersistenceImpl.findById()-->End. [Invocation Time : 0 ms.]>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.support.PersistenceServiceProvider.findById()-->End. [Invocation Time : 0 ms.]>
[org.workin.log.LoggerAspectProxy] - <org.workin.test.application.service.PersonServiceImpl.findById()-->End. [Invocation Time : 0 ms.]>
[org.workin.log.LoggerAspectProxy] - <org.workin.test.application.service.PersonServiceImpl.merge()-->Start.>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.support.PersistenceServiceProvider.merge()-->Start.>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.jpa.JpaPersistenceImpl.merge()-->Start.>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.jpa.JpaPersistenceImpl.merge()-->End. [Invocation Time : 0 ms.]>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.support.PersistenceServiceProvider.merge()-->End. [Invocation Time : 0 ms.]>
[org.workin.log.LoggerAspectProxy] - <org.workin.test.application.service.PersonServiceImpl.merge()-->End. [Invocation Time : 15 ms.]>
Hibernate: update person set version=?, birthday=?, name=?, sex=? where id=? and version=?
[org.springframework.test.context.transaction.TransactionalTestExecutionListener] - <Committed transaction after test execution for test context [[TestContext@1628b8d testClass = TestCase4PersonService, locations = array<String>['classpath:/applicationContext.xml'], testInstance = org.workin.test.application.TestCase4PersonService@856447, testMethod = updatePerson@TestCase4PersonService, testException = [null]&#x5d;&#x5d;&gt;
[org.springframework.test.context.transaction.TransactionalTestExecutionListener] - <Began transaction (11): transaction manager [org.springframework.orm.jpa.JpaTransactionManager@1162a9c]; rollback [false]>
[org.workin.log.LoggerAspectProxy] - <org.workin.test.application.service.PersonServiceImpl.findPersonsByPropertys()-->Start.>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.support.PersistenceServiceProvider.findByPropertys()-->Start.>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.jpa.JpaPersistenceImpl.findByPropertys()-->Start.>
[org.workin.core.persistence.jpa.JpaPersistenceImpl] - < Build Query String With NamedParams: SELECT obj FROM org.workin.test.application.entity.Person obj where sex = :sex and name = :name>
Hibernate: select person0_.id as id1_, person0_.version as version1_, person0_.birthday as birthday1_, person0_.name as name1_, person0_.sex as sex1_ from person person0_ where person0_.sex=? and person0_.name=?
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.jpa.JpaPersistenceImpl.findByPropertys()-->End. [Invocation Time : 0 ms.]>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.support.PersistenceServiceProvider.findByPropertys()-->End. [Invocation Time : 0 ms.]>
[org.workin.log.LoggerAspectProxy] - <org.workin.test.application.service.PersonServiceImpl.findPersonsByPropertys()-->End. [Invocation Time : 0 ms.]>
[org.workin.log.LoggerAspectProxy] - <org.workin.test.application.service.PersonServiceImpl.batchMerge()-->Start.>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.support.PersistenceServiceProvider.batchMerge()-->Start.>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.jpa.JpaPersistenceImpl.batchMerge()-->Start.>
Hibernate: update person set version=?, birthday=?, name=?, sex=? where id=? and version=?
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.jpa.JpaPersistenceImpl.batchMerge()-->End. [Invocation Time : 0 ms.]>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.support.PersistenceServiceProvider.batchMerge()-->End. [Invocation Time : 0 ms.]>
[org.workin.log.LoggerAspectProxy] - <org.workin.test.application.service.PersonServiceImpl.batchMerge()-->End. [Invocation Time : 0 ms.]>
[org.workin.log.LoggerAspectProxy] - <org.workin.test.application.service.PersonServiceImpl.findPersonsByPropertys()-->Start.>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.support.PersistenceServiceProvider.findByPropertys()-->Start.>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.jpa.JpaPersistenceImpl.findByPropertys()-->Start.>
[org.workin.core.persistence.jpa.JpaPersistenceImpl] - < Build Query String With NamedParams: SELECT obj FROM org.workin.test.application.entity.Person obj where sex = :sex and name = :name>
Hibernate: select person0_.id as id1_, person0_.version as version1_, person0_.birthday as birthday1_, person0_.name as name1_, person0_.sex as sex1_ from person person0_ where person0_.sex=? and person0_.name=?
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.jpa.JpaPersistenceImpl.findByPropertys()-->End. [Invocation Time : 15 ms.]>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.support.PersistenceServiceProvider.findByPropertys()-->End. [Invocation Time : 15 ms.]>
[org.workin.log.LoggerAspectProxy] - <org.workin.test.application.service.PersonServiceImpl.findPersonsByPropertys()-->End. [Invocation Time : 15 ms.]>
[org.springframework.test.context.transaction.TransactionalTestExecutionListener] - <Committed transaction after test execution for test context [[TestContext@1628b8d testClass = TestCase4PersonService, locations = array<String>['classpath:/applicationContext.xml'], testInstance = org.workin.test.application.TestCase4PersonService@1bc6533, testMethod = mixSqlMapAndJpa@TestCase4PersonService, testException = [null]&#x5d;&#x5d;&gt;
[org.springframework.test.context.transaction.TransactionalTestExecutionListener] - <Began transaction (12): transaction manager [org.springframework.orm.jpa.JpaTransactionManager@1162a9c]; rollback [false]>
[org.workin.log.LoggerAspectProxy] - <org.workin.test.application.service.PersonServiceImpl.getAll()-->Start.>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.support.PersistenceServiceProvider.getAll()-->Start.>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.jpa.JpaPersistenceImpl.getAll()-->Start.>
Hibernate: select person0_.id as id1_, person0_.version as version1_, person0_.birthday as birthday1_, person0_.name as name1_, person0_.sex as sex1_ from person person0_
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.jpa.JpaPersistenceImpl.getAll()-->End. [Invocation Time : 0 ms.]>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.support.PersistenceServiceProvider.getAll()-->End. [Invocation Time : 0 ms.]>
[org.workin.log.LoggerAspectProxy] - <org.workin.test.application.service.PersonServiceImpl.getAll()-->End. [Invocation Time : 0 ms.]>
[org.workin.log.LoggerAspectProxy] - <org.workin.test.application.service.PersonServiceImpl.getAll()-->Start.>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.support.PersistenceServiceProvider.getAll()-->Start.>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.jpa.JpaPersistenceImpl.getAll()-->Start.>
Hibernate: select person0_.id as id1_, person0_.version as version1_, person0_.birthday as birthday1_, person0_.name as name1_, person0_.sex as sex1_ from person person0_
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.jpa.JpaPersistenceImpl.getAll()-->End. [Invocation Time : 15 ms.]>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.support.PersistenceServiceProvider.getAll()-->End. [Invocation Time : 15 ms.]>
[org.workin.log.LoggerAspectProxy] - <org.workin.test.application.service.PersonServiceImpl.getAll()-->End. [Invocation Time : 15 ms.]>
[org.workin.log.LoggerAspectProxy] - <org.workin.test.application.service.PersonServiceImpl.batchRemove()-->Start.>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.support.PersistenceServiceProvider.batchRemove()-->Start.>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.jpa.JpaPersistenceImpl.batchRemove()-->Start.>
Hibernate: select person0_.id as id1_1_, person0_.version as version1_1_, person0_.birthday as birthday1_1_, person0_.name as name1_1_, person0_.sex as sex1_1_, address1_.person_id as person1_3_, address2_.id as address2_3_, address2_.id as id0_0_, address2_.version as version0_0_, address2_.createBy as createBy0_0_, address2_.createdttm as createdttm0_0_, address2_.updateBy as updateBy0_0_, address2_.updatedttm as updatedttm0_0_, address2_.home as home0_0_, address2_.phone as phone0_0_, address2_.work as work0_0_ from person person0_ left outer join person_Address address1_ on person0_.id=address1_.person_id left outer join Address address2_ on address1_.address_id=address2_.id where person0_.id=?
Hibernate: delete from person where id=? and version=?
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.jpa.JpaPersistenceImpl.batchRemove()-->End. [Invocation Time : 16 ms.]>
[org.workin.log.LoggerAspectProxy] - <org.workin.core.persistence.support.PersistenceServiceProvider.batchRemove()-->End. [Invocation Time : 16 ms.]>
[org.workin.log.LoggerAspectProxy] - <org.workin.test.application.service.PersonServiceImpl.batchRemove()-->End. [Invocation Time : 16 ms.]>
[org.springframework.test.context.transaction.TransactionalTestExecutionListener] - <Committed transaction after test execution for test context [[TestContext@1628b8d testClass = TestCase4PersonService, locations = array<String>['classpath:/applicationContext.xml'], testInstance = org.workin.test.application.TestCase4PersonService@6f4652, testMethod = initDbAgain@TestCase4PersonService, testException = [null]&#x5d;&#x5d;&gt;

